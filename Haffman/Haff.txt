#include <stdio.h>
#include <stdlib.h>
typedef struct treeNode Tree;
struct treeNode{
	int data;
	int parent;
	int left;
	int right;
};
int count=0;
Tree t[20000];
void Caculate(int i);
int main(int argc, char *argv[]) {
	int n,i,j;
	scanf("%d",&n);
	for(i=0;i<2*n-1;i++){
		t[i].parent=-1;
	}
	for(i=0;i<n;i++){
		scanf("%d",&t[i].data);
	}
	for(i=0;i<n-1;i++){
		int x1=0,x2=0; //最小和次小的位置
		int min1=999999,min2=999999; //存储最小和次小的数据 
		for(j=0;j<n+i;j++){
			if(t[j].parent==-1&&t[j].data<min1){
				min2=min1;
				x2=x1;
				min1=t[j].data;
				x1=j;
			}
			else if(t[j].parent==-1&&t[j].data<min2){
				min2=t[j].data;
				x2=j;
			}
		}
		t[x1].parent=n+i;
		t[x2].parent=n+i;
		t[n+i].left=x1;
		t[n+i].right=x2;
		t[n+i].data=min1+min2;
	} 
	Caculate(2*n-2);
	printf("%d",count);
	return 0;
}
void Caculate(int i){
	if(!t[i].left&&!t[i].right)return;
	else{
		count+=t[i].data;
	}
	if(t[i].left){
		Caculate(t[i].left);
	}
	if(t[i].right){
		Caculate(t[i].right);		
	}
}

